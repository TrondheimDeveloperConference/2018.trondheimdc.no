{"version":3,"sources":["node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/lib/rng-browser.js","src/js/menu_button.js","src/js/logo.js","node_modules/uuid/v4.js","node_modules/uuid/v1.js","node_modules/uuid/index.js","src/js/ga.js","src/js/speaker.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AACA,AACA,AACA;;;;AACA;AACA,0FACA;6GACA;;;AAEA,sDACA;oBACA;YACA;AACA;iCACA,qCACA,mCACA,mCACA,mCACA,4BACA,8BACA,0CACA;;;AAEA;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA,+HACA;;AAEA,wCACA;AACA;qDAEA;;4DACA;uCACA;WACA;AACA;OACA;AACA;AACA;AACA;AACA;0CAEA;;0DACA;oCACA;gDACA;6DACA;AAEA;;WACA;AACA;;;;;;;;;gDC/BA;8CACA;8DACA;oCACA;qCACA;6BACA;AACA;0BACA;2CACA;;AACA;;;;;;;;;;;;;oBACA;AACA;;;;;;;;;;ACZA;AACA;;AAEA,uCACA;qDAEA;;qBACA;yCACA;WACA;sCACA;AACA;;;AAEA,4CACA;kBAEA;;AACA,uBACA,kBACA,oEACA,8EACA,AACA;AAEA;;iDACA;kBACA;mDACA;sBAEA;;qDACA;AACA;0BACA;AAEA;;sBAEA;AAEA;AACA;;;;;;;ACxCA;AACA;;AAEA,0CACA;2BAEA;;kCACA;iDACA;cACA;AACA;uBAEA;;+CAEA;;AACA;6BACA;6BAEA;;AACA;WACA;oCACA;yBACA;AACA;AAEA;;oCACA;;;AAEA;;;;;;AC5BA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;2BAEA;iBAEA;;uBACA;6BACA;qEAEA;;AACA;AACA;AACA;wCACA;oBACA;sBACA;AACA;+BACA,gBACA,wEACA,AACA;AACA;0BACA;AACA;0EACA;AACA;AAEA;;AACA;AACA;AACA;AACA;uEAEA;;AACA;AACA;iFAEA;;AACA;uEAEA;;AACA;gDACA;8BACA;AAEA;;AACA;AACA;6EACA;YACA;AAEA;;AACA;sBACA;oBACA;AAEA;;uBACA;uBACA;sBAEA;;AACA;WAEA;;AACA;mDACA;uBACA;uBACA;sBACA;gBAEA;;AACA;0CACA;uBACA;iBAEA;;AACA;mCA1EA,CA2EA;wBAEA;;AACA;4BAEA;;AACA;sBAEA;;AACA;8BACA;oBACA;AAEA;;yCACA;;;AAEA;;;;;;AC5GA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACPA,AAEA;;;qCACA;QACA;4BACA;iEACA;uGACA;0CACA;oDACA;AACA;;mDACA;;6BACA;iEACA;oBACA;;uCACA;8BACA;uCACA;uCACA;oDACA;AACA;iCACA;0BACA;kDACA;6BACA;qDACA;oDACA;wDACA;AAEA;;;2BAEA;4BACA;4BACA,AAEA;AALA;eAMA;0CACA;AACA;mBACA;gBACA;sBACA;AACA;;;;;;;AC1CA;;;;AACA;;;;AACA;;;;;AAEA;;AAEA;AACA","file":"src/js/speaker.js","sourcesContent":["/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","\nexport default function registerMenuToggler() {\n    const menuToggler = document.getElementById('menuToggler');\n    const nav = document.getElementsByClassName('c-navigation')[0];\n    let toggle = e => {\n        menuToggler.classList.toggle('show--menu');\n        nav.classList.toggle('show--menu');\n    };\n    menuToggler.onclick = toggle;\n    const anchors = nav.getElementsByTagName('a');\n    for(let a of anchors) {\n        a.onclick = toggle;\n    }\n}","\nconst logo = document.getElementById('tdclogo');\nconst name = document.getElementById('name');\n\nfunction toggleLogoInMenu() {\n    const nameVisible = isElementInViewport(name);\n\n    if(nameVisible) {\n        logo.classList.remove('c-header__logo--in-menu');\n    } else {\n        logo.classList.add('c-header__logo--in-menu');\n    }\n}\n\nfunction isElementInViewport (el) {\n    const rect = el.getBoundingClientRect();\n\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n}\n\nexport default function registerLogoScrollListener() {\n    let ticking = false;\n    window.addEventListener('scroll', e => {\n        if (!ticking) {\n\n            window.requestAnimationFrame(() => {\n                toggleLogoInMenu();\n                ticking = false;\n            });\n\n            ticking = true;\n\n        }\n\n    });\n}","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","import uuid from 'uuid';\n\nexport default function installAnalytics(){\n    try {\n        let hash = location.hash;\n        if (hash.length > 2 && hash.indexOf('clientid=') !== -1) {\n            const clientId = hash.substring(hash.indexOf('clientid=') + 'clientid='.length, hash.indexOf('&favs'));\n            console.log(`Got clientid ${clientId} from hash`);\n            localStorage.setItem('tdc-client-uuid', clientId);\n        }\n        (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n            e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n            e.src='//www.google-analytics.com/analytics.js';\n            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\n        ga(function(tracker) {\n            const clientId = tracker.get('clientId');\n            console.log(`Got GA id ${clientId}`);\n            localStorage.setItem('tdc-client-uuid', clientId);\n        });\n        ga('set', 'anonymizeIp', true);\n        if (localStorage) {\n            let clientuuid = localStorage.getItem('tdc-client-uuid');\n            if (!clientuuid) {\n                clientuuid = uuid.v4();\n                console.log(`Creating client id ${clientuuid}`);\n                localStorage.setItem('tdc-client-uuid', clientuuid);\n            }\n\n            ga('create','UA-98174789-3', {\n                'storage': 'none',\n                'storeGac': false,\n                'clientId': clientuuid\n            });\n\n        } else {\n            ga('create','UA-98174789-1','auto');\n        }\n        ga('send','pageview');\n    } catch (e) {\n        console.error(e);\n    }\n};","import registerLogoScrollListener from './logo';\nimport registerMenuToggler from './menu_button';\nimport installAnalytics from './ga';\n\n//installAnalytics();\n\nregisterLogoScrollListener();\nregisterMenuToggler();"]}